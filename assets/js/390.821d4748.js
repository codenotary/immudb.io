(window.webpackJsonp=window.webpackJsonp||[]).push([[390],{903:function(e,a,t){"use strict";t.r(a);var s=t(14),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"user-quickstart-with-immudb-and-immuclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-quickstart-with-immudb-and-immuclient"}},[e._v("#")]),e._v(" User Quickstart with immudb and immuclient")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("To learn interactively and to get started with immudb from the command line and with programming languages, visit the immudb Playground at "),t("a",{attrs:{href:"https://play.codenotary.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://play.codenotary.com"),t("OutboundLink")],1)])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"getting-immudb-running"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-immudb-running"}},[e._v("#")]),e._v(" Getting immudb running")]),e._v(" "),t("p",[e._v("You may download the immudb binary from "),t("a",{attrs:{href:"https://github.com/codenotary/immudb/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("the latest releases on Github"),t("OutboundLink")],1),e._v(". Once you have downloaded immudb, rename it to "),t("code",[e._v("immudb")]),e._v(", make sure to mark it as executable, then run it. The following example shows how to obtain v1.0 for linux amd64:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/vchain-us/immudb/releases/download/v1.0.0/immudb-v1.0.0-linux-amd64\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" immudb-v1.0.0-linux-amd64 immudb\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +x immudb\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# run immudb in the foreground to see all output")]),e._v("\n./immudb\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# or run immudb in the background")]),e._v("\n./immudb -d\n")])])]),t("p",[e._v("Alternatively, you may use Docker to run immudb in a ready-to-use container:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d --net "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("host")]),e._v(" -it --rm --name immudb codenotary/immudb:latest\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"connecting-with-immuclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connecting-with-immuclient"}},[e._v("#")]),e._v(" Connecting with immuclient")]),e._v(" "),t("p",[e._v("You may download the immuclient binary from "),t("a",{attrs:{href:"https://github.com/codenotary/immudb/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("the latest releases on Github"),t("OutboundLink")],1),e._v(". Once you have downloaded immuclient, rename it to "),t("code",[e._v("immuclient")]),e._v(", make sure to mark it as executable, then run it. The following example shows how to obtain v1.0.0 for linux amd64:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://github.com/vchain-us/immudb/releases/download/v1.0.0/immuclient-v1.0.0-linux-amd64\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" immuclient-v1.0.0-linux-amd64 immuclient\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +x immuclient\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# start the interactive shell")]),e._v("\n./immuclient\n")])])]),t("p",[e._v("Alternatively, you may use Docker to run immuclient in a ready-to-use container:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -it --rm --net "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("host")]),e._v(" --name immuclient codenotary/immuclient:latest\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"basic-operations-with-immuclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-operations-with-immuclient"}},[e._v("#")]),e._v(" Basic operations with immuclient")]),e._v(" "),t("p",[e._v("Before any operations can be run by immuclient, it is necessary to authenticate against the running immudb server.")]),e._v(" "),t("p",[e._v("When immudb is first run, it is ready to use immediately with the default database and credentials:")]),e._v(" "),t("ul",[t("li",[e._v("Database name: defaultdb")]),e._v(" "),t("li",[e._v("User: immudb")]),e._v(" "),t("li",[e._v("Password: immudb")]),e._v(" "),t("li",[e._v("Address: 127.0.0.1")]),e._v(" "),t("li",[e._v("Port: 3322")])]),e._v(" "),t("p",[t("code",[e._v("./immudb --help")]),e._v(" displays and describes all options available.")]),e._v(" "),t("p",[e._v("Running "),t("code",[e._v("login immudb")]),e._v(" from within immuclient will use the default database name and port. All you need to supply is the user and password:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" login immudb\nPassword: immudb\n")])])]),t("p",[e._v("While immudb supports "),t("code",[e._v("set")]),e._v(" and "),t("code",[e._v("get")]),e._v(" for key-value storing and retrieving, its immutability means that we can verify the integrity of the underlying Merkle tree. To do this, we use the "),t("code",[e._v("safeset")]),e._v(" and "),t("code",[e._v("safeget")]),e._v(" commands. Let's try setting a value of "),t("code",[e._v("100")]),e._v(" for the key "),t("code",[e._v("balance")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" safeset balance "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),e._v("\n")])])]),t("p",[e._v("Then, we can immediately overwrite the key "),t("code",[e._v("balance")]),e._v(" with a value of "),t("code",[e._v("9001")]),e._v(" instead:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" safeset balance "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9001")]),e._v("\n")])])]),t("p",[e._v("If we try to retrieve the current value of key "),t("code",[e._v("balance")]),e._v(", we should get "),t("code",[e._v("9001")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" safeget balance\n")])])]),t("p",[e._v("Note that at each step so far, the "),t("code",[e._v("verified")]),e._v(" flag is set to true. This ensures that the Merkle tree remains consistent for each transaction.")]),e._v(" "),t("p",[e._v("We can show the history of transactions for key "),t("code",[e._v("balance")]),e._v(" using the "),t("code",[e._v("history")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("history")]),e._v(" balance\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"basic-operations-with-immuadmin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-operations-with-immuadmin"}},[e._v("#")]),e._v(" Basic operations with immuadmin")]),e._v(" "),t("p",[e._v("Immuadmin is the admin client for immudb. This is used for a variety of tasks such as creating and updating databases and users. Creating backups, restoring from backups etc.")]),e._v(" "),t("p",[e._v("To get started we need to login to "),t("code",[e._v("immuadmin")]),e._v(" first. The "),t("code",[e._v("admin")]),e._v(" user is the similar to the "),t("code",[e._v("root")]),e._v(" user in MySQL etc.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuadmin login immudb\n")])])]),t("p",[e._v("Once logged in we can create a new database using")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuadmin database create mydatabase\n")])])]),t("p",[e._v("Switching to our newly created database. Using immuclient once you are logged in you can select the database you would like to using")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" use mydatabse\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"sql-operations-with-immuclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-operations-with-immuclient"}},[e._v("#")]),e._v(" SQL operations with immuclient")]),e._v(" "),t("p",[e._v("In addition to a key-value store, immudb supports the relational model (SQL). For example, to a table:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"CREATE TABLE people(id INTEGER, name VARCHAR, salary INTEGER, PRIMARY KEY id);"')]),e._v("\nsql ok, Ctxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" Dtxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),t("p",[e._v("To insert data, use "),t("code",[e._v("UPSERT")]),e._v(" (insert or update), which will add an entry, or overwrite it if already exists (based on the primary key):")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"UPSERT INTO people(id, name, salary) VALUES (1, 'Joe', 10000);\"")]),e._v("\nsql ok, Ctxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" Dtxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nimmuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"UPSERT INTO people(id, name, salary) VALUES (2, 'Bob', 30000);\"")]),e._v("\nsql ok, Ctxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" Dtxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),t("p",[e._v("To query the data you can use the traditional "),t("code",[e._v("SELECT")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SELECT id, name, salary FROM people;"')]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Joe                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Bob                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v('If we upsert again on the primary key "1", the value for "Joe" will be overwriten:')]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"UPSERT INTO people(id, name, salary) VALUES (1, 'Joe', 20000);\"")]),e._v("\nsql ok, Ctxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" Dtxs: "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\nimmuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SELECT id, name, salary FROM people;"')]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Joe                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Bob                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"time-travel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#time-travel"}},[e._v("#")]),e._v(" Time travel")]),e._v(" "),t("p",[e._v("immudb is a immutable database. History is always preserved. With immudb you can travel in time!")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"SELECT id, name, salary FROM people WHERE name='Joe';\"")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Joe                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("We can see the current transaction id using")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" current\ntxID:             "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v("\nhash: e91c254ad58860a02c788dfb5c1a65d6a8846ab1dc649631c7db16fef4af2dec\n\n")])])]),t("p",[e._v("This is the transaction id we will be using for the subsequent queries.")]),e._v(" "),t("p",[e._v("Eg. before the update:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"SELECT id, name, salary FROM people BEFORE TX 3 WHERE name='Joe';\"")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Joe                     "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("or even before the first time insert (guess what, it is empty!):")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"SELECT id, name, salary FROM people BEFORE TX 1 WHERE name='Joe';\"")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLE SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+-----------------------+-------------------------+---------------------------+\n+-----------------------+-------------------------+---------------------------+\n")])])]),t("p",[e._v("You can even "),t("code",[e._v("TABLE")]),e._v(" a table with itself in the past. Imagine you want to see how people salary changed between two points in time:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("immuclient query "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SELECT peoplenow.id, peoplenow.name, peoplethen.salary, peoplenow.salary FROM people BEFORE TX 3 AS peoplethen INNER JOIN people AS peoplenow ON peoplenow.id=peoplethen.id;"')]),e._v("\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLENOW ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLENOW NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLETHEN SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DEFAULTDB PEOPLENOW SALARY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Joe                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Bob                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                         "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("                        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30000")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("\n+--------------------------+----------------------------+-------------------------------+------------------------------+\n")])])])]),e._v(" "),t("WrappedSection",[t("h2",{attrs:{id:"kv-data-revisions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kv-data-revisions"}},[e._v("#")]),e._v(" KV Data revisions")]),e._v(" "),t("p",[e._v("Whenever a new value is stored under given key, immudb saves a new revision of that data.\nRevision numbers start with 1 - the first value ever written to the database will have\na revision number 1, the second will have 2 and so on.")]),e._v(" "),t("p",[e._v("When reading a value from immudb, an explicit revision number can be specified.\nIf the provided number is greater than 0, a value for given revision is retrieved.\nIf the provided number is less than 0, the nth previous value is retrieved.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" key value1\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nkey:      key\nvalue:    value1\n\n$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" key value2\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nkey:      key\nvalue:    value2\n\n$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" key value3\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\nkey:      key\nvalue:    value3\n\n$ immuclient get key@1  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Get the key at the first revision")]),e._v("\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nkey:      key\nvalue:    value1\n\n$ immuclient get key@-1  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Get the key at the previous revision")]),e._v("\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nkey:      key\nvalue:    value2\n")])])]),t("p",[e._v("The immuclient tool has also the possibility to restore a previous revision for given key.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient restore key@-2\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\nkey:      key\nvalue:    value1\n")])])]),t("h3",{attrs:{id:"querying-for-keys-containing-revision-separator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#querying-for-keys-containing-revision-separator"}},[e._v("#")]),e._v(" Querying for keys containing revision separator")]),e._v(" "),t("p",[e._v("In some cases, the key can already contain the "),t("code",[e._v("@")]),e._v(" character reserved for key separator.\nIn such case there are few options to read such key. The revision separator can be changed\nto any other string that is not part of the key. Also because immuclient will only scan\nthe last occurrence of the revision separator, an explicit 0th revision can be set to read\nthe current value behind such key.")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ immuclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" some@email.address active\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nkey:      some@email.address\nvalue:    active\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Change the revision separator with environment variable")]),e._v("\n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("IMMUCLIENT_REVISION_SEPARATOR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"###"')]),e._v(" immuclient get some@email.address\ntx:     "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nkey:    some@email.address\nvalue:  active\nhash:   138033b5a89438758fdb3481ba0dc44816d550749f799223587cb30cd7eadf5a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Disable / change the revision separator through command-line argument")]),e._v("\n$ immuclient get --revision-separator"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v(" some@email.address\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nkey:      some@email.address\nvalue:    active\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Always use the revision number, use 0 for the current value")]),e._v("\n$ immuclient get some@email.address@0\ntx:       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nrev:      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nkey:      some@email.address\nvalue:    active\n")])])])])],1)}),[],!1,null,null,null);a.default=n.exports}}]);