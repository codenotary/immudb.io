(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{659:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"command-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-reference"}},[t._v("#")]),t._v(" Command reference")]),t._v(" "),a("h2",{attrs:{id:"immudb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immudb"}},[t._v("#")]),t._v(" immudb")]),t._v(" "),a("p",[t._v("Simply run "),a("code",[t._v("./immudb -d")]),t._v(" to start immudb locally in the background.")]),t._v(" "),a("p",[t._v("If you want to stop immudb Ã®n that case you need to find the process "),a("code",[t._v("ps -ax | grep immudb")]),t._v(" and then "),a("code",[t._v("kill -15 <pid>")]),t._v(". Windows PowerShell would be "),a("code",[t._v("Get-Process immudb* | Stop-Process")]),t._v(".")]),t._v(" "),a("p",[t._v("immudb is launched by default with a security routine called "),a("RouterLink",{attrs:{to:"/1.0.0/reference/immudb/consistency-checker.html"}},[t._v("consistency checker")]),t._v(" . This solution provides a continuous corruption check on data stored on server storage.")],1),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("immudb - the lightweight, high-speed immutable database "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\n\nEnvironment variables:\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_NETWORK")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("immudb\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PIDFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_LOGFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_MTLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_AUTH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DETACHED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_CONSISTENCY_CHECK")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_PKEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/3_application/private/localhost.key.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_CERTIFICATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/3_application/certs/localhost.cert.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_CLIENTCAS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_DEVMODE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_MAINTENANCE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUDB_ADMIN_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("immudb\n\nUsage:\n  immudb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immudb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  version     Show the immudb version\n\nFlags:\n  -a, --address string          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("bind")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --admin-password string   admin password "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default is "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" as plain-text or base64 encoded "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("must be prefixed with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'enc:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it is encoded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immudb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -s, --auth                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" auth\n      --certificate string      server certificate "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/3_application/certs/localhost.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string        clients certificates list. Aka certificate authority "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string           config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immudb.ini"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --consistency-check       "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" consistency check monitor routine. To disable: --consistency-check"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --detached                run immudb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" background\n      --devmode                 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" dev mode: accept remote connections without auth\n      --dir string              data folder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./data"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb\n      --logfile string          log path with filename. E.g. /tmp/immudb/immudb.log\n      --maintenance             override the authentication flag\n  -m, --mtls                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --no-histograms           disable collection of histogram metrics like query durations\n      --pidfile string          pid path with filename. E.g. /var/run/immudb.pid\n      --pkey string             server private key path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/3_application/private/localhost.key.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --port int                port number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immudb [command] --help"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n")])])]),a("h2",{attrs:{id:"immugw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immugw"}},[t._v("#")]),t._v(" immugw")]),t._v(" "),a("p",[t._v("immugw can be found in a different "),a("a",{attrs:{href:"https://github.com/codenotary/immugw",target:"_blank",rel:"noopener noreferrer"}},[t._v("repository"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Simply run "),a("code",[t._v("./immugw -d")]),t._v(" to start immugw on the same machine as immudb (test or dev environment) or point to the remote immudb system "),a("code",[t._v('./immugw --immudbaddress "immudb-server"')]),t._v(".")]),t._v(" "),a("p",[t._v("If you want to stop immugw Ã®n that case you need to find the process "),a("code",[t._v("ps -ax | grep immugw")]),t._v(" and then "),a("code",[t._v("kill -15 <pid>")]),t._v(". Windows PowerShell would be "),a("code",[t._v("Get-Process immugw* | Stop-Process")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("immu gateway: a smart REST proxy "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\nIt exposes all gRPC methods with a REST interface "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" wrapping all SAFE endpoints with a verification service.\n\nEnvironment variables:\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PIDFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_LOGFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DETACHED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_MTLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_SERVERNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PKEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CERTIFICATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CLIENTCAS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immugw "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immugw "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  version     Show the immugw version\n\nFlags:\n  -a, --address string            immugw "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit                     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" audit mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("continuously fetches latest root from server, checks consistency against a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" root and saves the latest root locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-interval duration   interval at "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" audit should run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default 5m0s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-password string     immudb password used to login during audit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" can be plain-text or base64 encoded "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("must be prefixed with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'enc:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it is encoded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-username string     immudb username used to login during audit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immugwauditor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --certificate string        server certificate "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string          clients certificates list. Aka certificate authority "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string             config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immugw.toml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --detached                  run immudb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" background\n      --dir string                program files folder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immugw\n  -k, --immudb-address string     immudb "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -j, --immudb-port int           immudb port number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --logfile string            log path with filename. E.g. /tmp/immugw/immugw.log\n  -m, --mtls                      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pidfile string            pid path with filename. E.g. /var/run/immugw.pid\n      --pkey string               server private key path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --port int                  immugw port number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string         used to verify the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immugw [command] --help"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n")])])]),a("h2",{attrs:{id:"immuadmin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immuadmin"}},[t._v("#")]),t._v(" immuadmin")]),t._v(" "),a("p",[t._v("For security reasons we recommend using immuadmin only on the same system as immudb. User management is restricted to localhost usage. Simply run "),a("code",[t._v("./immuadmin")]),t._v(" on the same machine.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("CLI admin client "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\n\nEnvironment variables:\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_IMMUDB_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_IMMUDB_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_MTLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_SERVERNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_PKEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_CERTIFICATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUADMIN_CLIENTCAS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nUsage:\n  immuadmin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  backup      Make a copy of the database files and folders\n  database    Issue all database commands\n  dump        Dump database content to a "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  login       Login using the specified username and password "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("admin username is immudb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("\n  print       Print merkle tree\n  restore     Restore the database from a snapshot archive or folder\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("     Manage immu services\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("         Update server config items: auth "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cryptosig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", mtls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  stats       Show statistics as text or visually with the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-v'")]),t._v(" option. Run "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immuadmin stats -h'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details.\n  status      Show heartbeat status\n  user        Issue all user commands\n  version     Show the immuadmin version\n\nFlags:\n      --certificate string      server certificate "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string        clients certificates list. Aka certificate authority "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string           config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is configs or "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is immuadmin.toml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immuadmin\n  -a, --immudb-address string   immudb "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --immudb-port int         immudb port number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -m, --mtls                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pkey string             server private key path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string       used to verify the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --tokenfile string        authentication token "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v(" or binary location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" the supplied value will be automatically suffixed with _admin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is token-0.7.0_admin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token-0.7.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immuadmin [command] --help"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n")])])]),a("h2",{attrs:{id:"immuclient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immuclient"}},[t._v("#")]),t._v(" immuclient")]),t._v(" "),a("p",[t._v("Simply run "),a("code",[t._v("./immuclient")]),t._v(" on the same machine or connect to a remote immudb "),a("code",[t._v("./immuclient -a <immudb-host>")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("CLI client "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\nEnvironment variables:\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_IMMUDB_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_IMMUDB_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_AUTH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_MTLS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_SERVERNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_PKEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_CERTIFICATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUCLIENT_CLIENTCAS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n\nIMPORTANT: All get and safeget functions "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" base64-encoded keys and values, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" and safeset functions "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" base64-encoded inputs.\n\nUsage:\n  immuclient "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immuclient "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  audit-mode        Starts immuclient as daemon "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" auditor mode. Run "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immuclient audit-mode help'")]),t._v(" or use -h flag "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details\n  check-consistency Check consistency "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the specified index and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v("\n  count             Count keys having the specified prefix\n  current           Return the last merkle tree root and index stored locally\n  get               Get item having the specified key\n  getByIndex        Return an element by index\n  getRawBySafeIndex Return an element by index\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("              Help about any "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v("           Fetch "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the item having the specified key\n  inclusion         Check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" specified index is included "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the current tree\n  iscan             Iterate over all elements by insertion order\n  it                Starts immuclient "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" CLI mode. Use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'help'")]),t._v(" or -h flag on the shell "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details\n  login             Login using the specified username and password\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("\n  rawsafeget        Get item having the specified key, without parsing structured values\n  rawsafeset        Set a value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the item having the specified key, without setup structured values\n  reference         Add new reference to an existing key\n  safeget           Get and verify item having the specified key\n  safereference     Add and verify new reference to an existing key\n  safeset           Add and verify new item having the specified key and value\n  safezadd          Add and verify new key with score to a new or existing sorted "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n  scan              Iterate over keys having the specified prefix\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("               Add new item having the specified key and value\n  status            Ping to check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server connection is alive\n  use               Select database\n  user              Issue all user commands\n  version           Show the immuclient version\n  zadd              Add new key with score to a new or existing sorted "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n  zscan             Iterate over a sorted "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("\n\nFlags:\n      --audit-password string    immudb password used to login during audit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" can be plain-text or base64 encoded "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("must be prefixed with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'enc:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it is encoded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-username string    immudb username used to login during audit\n      --certificate string       server certificate "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string         clients certificates list. Aka certificate authority "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string            config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immuclient.toml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --dir string               Main directory "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" audit process tool to initialize "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immuclient\n  -a, --immudb-address string    immudb "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --immudb-port int          immudb port number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -m, --mtls                     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pkey string              server private key path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --prometheus-host string   Launch "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" of the Prometheus exporter. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --prometheus-port string   Launch port of the Prometheus exporter. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9477"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --roots-filepath string    Filepath "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" storing root hashes after every successful audit loop. Default is tempdir of every OS. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string        used to verify the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --tokenfile string         authentication token "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path is "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v(" or binary location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" default filename is token-0.7.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token-0.7.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --value-only               returning only values "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" get operations\n\nUse "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immuclient [command] --help"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);