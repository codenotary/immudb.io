(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{763:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw"}},[t._v("#")]),t._v(" immugw")]),t._v(" "),s("p",[t._v("immugw is the intelligent REST proxy that connects to immudb and provides a RESTful interface for applications. We recommend running immudb and immugw on separate machines to enhance security\nimmugw can be found in a different "),s("a",{attrs:{href:"https://github.com/codenotary/immugw",target:"_blank",rel:"noopener noreferrer"}},[t._v("repository"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#latest-binaries"}},[t._v("Latest binaries")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#build"}},[t._v("Build")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#docker"}},[t._v("Docker")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#run-immugw"}},[t._v("Run immugw")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#configuration"}},[t._v("Configuration")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#immuadmin"}},[t._v("immuadmin")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#immugw-service"}},[t._v("immugw service")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#use-immugw"}},[t._v("Use immugw")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#api"}},[t._v("API")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#auditor"}},[t._v("Auditor")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#license"}},[t._v("License")])])]),t._v(" "),s("h2",{attrs:{id:"latest-binaries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#latest-binaries"}},[t._v("#")]),t._v(" Latest binaries")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/codenotary/immugw/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[t._v("Get the latest builds"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),s("p",[t._v("clone the immugw repository locally")]),t._v(" "),s("p",[t._v("'git clone "),s("a",{attrs:{href:"https://github.com/codenotary/immugw.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/codenotary/immugw.git"),s("OutboundLink")],1),t._v("'")]),t._v(" "),s("h3",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immugw-static\n")])])]),s("h3",{attrs:{id:"macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[t._v("#")]),t._v(" MacOS")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("darwin "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immugw-static\n")])])]),s("h3",{attrs:{id:"windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immugw-static\n")])])]),s("h2",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),s("h3",{attrs:{id:"build-your-own-docker-container-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-your-own-docker-container-image"}},[t._v("#")]),t._v(" build your own Docker container image")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build -t myown/immugw:latest -f Dockerfile "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"run-immugw-in-a-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw-in-a-container"}},[t._v("#")]),t._v(" run immugw in a container")]),t._v(" "),s("p",[t._v("Make sure to point to the immudb system using the environment variable IMMUGW_IMMUDB_ADDRESS")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -it -d -p 3323:3323 --name immugw --env IMMUGW_IMMUDB_ADDRESS=immudb codenotary/immugw:latest\n")])])]),s("h2",{attrs:{id:"run-immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw"}},[t._v("#")]),t._v(" Run immugw")]),t._v(" "),s("p",[t._v("Simply run "),s("code",[t._v("./immugw -d")]),t._v(" to start immugw on the same machine as immudb (test or dev environment) or pointing to the remote immudb system "),s("code",[t._v('./immugw --immudb-address "immudb-server"')]),t._v(".")]),t._v(" "),s("p",[t._v("If you want to stop immugw Ã®n that case you need to find the process "),s("code",[t._v("ps -ax | grep immugw")]),t._v(" and then "),s("code",[t._v("kill -15 <pid>")]),t._v(". Windows PowerShell would be "),s("code",[t._v("Get-Process immugw* | Stop-Process")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),s("p",[t._v("immugw can be configured using environment variables, flags or a config file.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("immugw --help")]),t._v(" shows you all available flags and environment variables.")]),t._v(" "),s("li",[s("code",[t._v("/etc/immudb/immugw.toml")]),t._v(" is used as a default configuration file")])]),t._v(" "),s("h3",{attrs:{id:"environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[t._v("#")]),t._v(" Environment variables")]),t._v(" "),s("p",[t._v("The environment variables are the most popular way to configure Docker container:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PIDFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_LOGFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DETACHED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT_INTERVAL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5m\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT_USERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("immugwauditor\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n")])])]),s("h2",{attrs:{id:"immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immuadmin"}},[t._v("#")]),t._v(" immuadmin")]),t._v(" "),s("p",[t._v("immuadmin can be used to install and manage the immugw service for Windows and Linux. immuadmin is part of the immugw repository.\n'git clone "),s("a",{attrs:{href:"https://github.com/codenotary/immudb.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/codenotary/immudb.git"),s("OutboundLink")],1),t._v("'")]),t._v(" "),s("h3",{attrs:{id:"linux-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-2"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immuadmin-static\n")])])]),s("h3",{attrs:{id:"windows-by-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-by-component"}},[t._v("#")]),t._v(" Windows (by component)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" immuadmin-static\n")])])]),s("h2",{attrs:{id:"immugw-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-service"}},[t._v("#")]),t._v(" immugw service")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# install immugw service\n./immugw service install\n\n# check current immugw service status\n./immugw service status\n\n# stop immugw service\n./immugw service stop\n\n# start immugw service\n./immugw service start\n")])])]),s("p",[t._v("The linux service is using the following defaults:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("File or configuration")]),t._v(" "),s("th",[t._v("location")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("all configuration files")]),t._v(" "),s("td",[t._v("/etc/immudb")])]),t._v(" "),s("tr",[s("td",[t._v("pid file")]),t._v(" "),s("td",[t._v("/var/lib/immudb/immugw.pid")])]),t._v(" "),s("tr",[s("td",[t._v("log files")]),t._v(" "),s("td",[t._v("/var/log/immudb")])])])]),t._v(" "),s("h2",{attrs:{id:"use-immugw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-immugw"}},[t._v("#")]),t._v(" Use immugw")]),t._v(" "),s("p",[s("code",[t._v("immugw help")]),t._v(" is a good starting point")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("immu gateway: a smart REST proxy "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immudb - the lightweight, high-speed immutable database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" systems and applications.\nIt exposes all gRPC methods with a REST interface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" wrapping all SAFE endpoints with a verification service.\n\nEnvironment variables:\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_IMMUDB_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PIDFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_LOGFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_DETACHED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/4_client/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n  IMMUGW_AUDIT_INTERVAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5m"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT_USERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMMUGW_AUDIT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\nUsage:\n  immugw "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  immugw "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nAvailable Commands:\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  version     Show the immugw version\n\nFlags:\n  -a, --address string            immugw "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit                     "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" audit mode "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("continuously fetches latest root from server, checks consistency against a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" root and saves the latest root locally"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-interval duration   interval at "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" audit should run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default 5m0s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --audit-password string     immudb password used to login during audit\n      --audit-username string     immudb username used to login during audit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immugwauditor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --certificate string        server certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/certs/localhost.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --clientcas string          clients certificates list. Aka certificate authority "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --config string             config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default path are configs or "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Default filename is immugw.toml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --detached                  run immudb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" background\n      --dir string                program files folder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, --help                      "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" immugw\n  -k, --immudb-address string     immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -j, --immudb-port int           immudb port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3322")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --logfile string            log path with filename. E.g. /tmp/immugw/immugw.log\n  -m, --mtls                      "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" mutual tls\n      --pidfile string            pid path with filename. E.g. /var/run/immugw.pid\n      --pkey string               server private key path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tools/mtls/4_client/private/localhost.key.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -p, --port int                  immugw port number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3323")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --servername string         used to verify the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" on the returned certificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immugw [command] --help"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information about a command.\n")])])]),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("h3",{attrs:{id:"immugw-restful-api-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-restful-api-reference"}},[t._v("#")]),t._v(" immugw RESTful API reference")]),t._v(" "),s("p",[t._v("You can find the swagger schema here:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/codenotary/immugw/blob/master/pkg/api/gw.schema.swagger.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("swagger immugw"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("If you want to run the Swagger UI, simply run the following Docker command after you cloned this repo:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d -it -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8080 --name swagger-immugw -v "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PWD")]),t._v("}")]),t._v("/pkg/api/gw.schema.swagger.json:/openapi.json -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SWAGGER_JSON")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/openapi.json  swaggerapi/swagger-ui\n")])])]),s("h3",{attrs:{id:"curl-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#curl-examples"}},[t._v("#")]),t._v(" Curl examples")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/1.2.2/immugw/curl.html"}},[t._v("Curl code snippets")])],1),t._v(" "),s("h2",{attrs:{id:"auditor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auditor"}},[t._v("#")]),t._v(" Auditor")]),t._v(" "),s("p",[t._v("Auditors make sure that the data consistency is guaranteed inside immudb. They do a random key value verification and an interval-based Merkle-tree consistency check (5 minutes default). The immugw and the immuclient provide auditor functionality that runs as a daemon process. It is recommended to run immugw and immuclient on different machines than immudb, so any tampering on the immudb server is automatically detected.")]),t._v(" "),s("p",[t._v("The results of the auditors are provided by a Prometheus end point.")]),t._v(" "),s("h3",{attrs:{id:"immugw-auditor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-auditor"}},[t._v("#")]),t._v(" immugw auditor")]),t._v(" "),s("p",[t._v("Start interactive:\n"),s("code",[t._v("immugw --audit")])]),t._v(" "),s("p",[t._v("Service configuration:\nTo enable auditor, you need to edit /etc/immudb/immugw.toml and add the following section:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("audit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false is default")]),t._v("\naudit-interval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5m"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# suffixes: "s", "m", "h", examples: 10s, 5m 1h')]),t._v("\naudit-username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# when immudb authentication is enabled, use read-only user credentials here")]),t._v("\naudit-password "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and the password")]),t._v("\n")])])]),s("p",[t._v("Restart the immugw service afterwards - "),s("code",[t._v("immuadmin service immugw restart")])]),t._v(" "),s("p",[s("strong",[t._v("immugw Port: 9476 - "),s("a",{attrs:{href:"http://immugw-auditor:9476/metrics",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://immugw-auditor:9476/metrics"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("example output:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HELP immugw_audit_curr_root_per_server Current root index used for the latest audit.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TYPE immugw_audit_curr_root_per_server gauge")]),t._v("\nimmugw_audit_curr_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:3322"')]),t._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HELP immugw_audit_prev_root_per_server Previous root index used for the latest audit.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TYPE immugw_audit_prev_root_per_server gauge")]),t._v("\nimmugw_audit_prev_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:3322"')]),t._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HELP immugw_audit_result_per_server Latest audit result (1 = ok, 0 = tampered).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TYPE immugw_audit_result_per_server gauge")]),t._v("\nimmugw_audit_result_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:3322"')]),t._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HELP immugw_audit_run_at_per_server Timestamp in unix seconds at which latest audit run.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TYPE immugw_audit_run_at_per_server gauge")]),t._v("\nimmugw_audit_run_at_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:3322"')]),t._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".590757033502689e+09\n")])])]),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("p",[t._v("immugw is "),s("a",{attrs:{href:"https://github.com/codenotary/immugw/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache v2.0 License"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=r.exports}}]);