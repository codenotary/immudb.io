(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{636:function(a,t,s){"use strict";s.r(t);var e=s(11),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"immudb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb"}},[a._v("#")]),a._v(" immudb")]),a._v(" "),s("h2",{attrs:{id:"contents-0-9-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contents-0-9-1"}},[a._v("#")]),a._v(" Contents 0.9.1")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#latest-binaries"}},[a._v("Latest binaries")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#build"}},[a._v("Build")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#docker"}},[a._v("Docker")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#run-immudb"}},[a._v("Run immudb")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#configuration"}},[a._v("Configuration")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#immuadmin"}},[a._v("immuadmin")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#immudb-service"}},[a._v("immudb service")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#authentication"}},[a._v("Authentication")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#state-signature"}},[a._v("State signature")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#backup-and-restore"}},[a._v("Backup and Restore")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#multi-database"}},[a._v("Multi-Database")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#clients"}},[a._v("Clients")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#auditors"}},[a._v("Auditors")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#architecture"}},[a._v("Architecture")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#license"}},[a._v("License")])])]),a._v(" "),s("h2",{attrs:{id:"latest-binaries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#latest-binaries"}},[a._v("#")]),a._v(" Latest binaries")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/codenotary/immudb/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[a._v("Get the latest builds"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("If you run macOS you can also use Homebrew:")]),a._v(" "),s("p",[s("code",[a._v("brew install immudb")])]),a._v(" "),s("h2",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[a._v("#")]),a._v(" Build")]),a._v(" "),s("p",[a._v("clone the immudb repository locally")]),a._v(" "),s("p",[a._v("'git clone https://github.com/codenotary/immudb.git'")]),a._v(" "),s("h3",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("linux "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" immudb-static\n")])])]),s("h3",{attrs:{id:"macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[a._v("#")]),a._v(" MacOS")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("darwin "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" immudb-static\n")])])]),s("h3",{attrs:{id:"windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[a._v("#")]),a._v(" Windows")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" immudb-static\n")])])]),s("h2",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),s("h3",{attrs:{id:"build-your-own-docker-container-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-your-own-docker-container-image"}},[a._v("#")]),a._v(" build your own Docker container image")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker build -t myown/immudb:latest -f Dockerfile "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("h3",{attrs:{id:"run-immugw-in-a-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immugw-in-a-container"}},[a._v("#")]),a._v(" run immugw in a container")]),a._v(" "),s("p",[a._v("Make sure to point to the immudb system using the environment variable IMMUGW_IMMUDB_ADDRESS")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run -it -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3322")]),a._v(":3322 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9497")]),a._v(":9497 --name immudb codenotary/immugw:latest\n")])])]),s("p",[a._v("or listen on all interfaces")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run -it -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3322")]),a._v(":3322 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9497")]),a._v(":9497 --name immudb -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.0.0.0"')]),a._v(" codenotary/immudb\n")])])]),s("p",[a._v("listen on all interfaces, persistent data")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker volume create immudb-data\ndocker run -it -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3322")]),a._v(":3322 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9497")]),a._v(":9497 -v immudb-data:/var/lib/immudb --name immudb -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.0.0.0"')]),a._v(" codenotary/immudb\n")])])]),s("h2",{attrs:{id:"run-immudb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-immudb"}},[a._v("#")]),a._v(" Run immudb")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run immudb in the foreground")]),a._v("\n./immudb\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run immudb in the background")]),a._v("\n./immudb -d\n")])])]),s("h2",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[a._v("#")]),a._v(" Configuration")]),a._v(" "),s("p",[a._v("immudb can be configured using environment variables, flags or a config file.")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("immudb --help")]),a._v(" shows you all available flags and environment variables.")]),a._v(" "),s("li",[s("code",[a._v("/etc/immudb/immudb.toml")]),a._v(" is used as a default configuration file")])]),a._v(" "),s("h3",{attrs:{id:"environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[a._v("#")]),a._v(" Environment variables")]),a._v(" "),s("p",[a._v("The environment variables are the most popular way to configure Docker container:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(".\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_NETWORK")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tcp\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_ADDRESS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3322")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_DBNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("immudb\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_PIDFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_LOGFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_MTLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_AUTH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_MAX_RECV_MSG_SIZE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4194304")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_DETACHED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_PKEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("./tools/mtls/3_application/private/localhost.key.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_CERTIFICATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("./tools/mtls/3_application/certs/localhost.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_CLIENTCAS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("./tools/mtls/2_intermediate/certs/ca-chain.cert.pem\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_DEVMODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_MAINTENANCE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_ADMIN_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("immudb\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMMUDB_SIGNING_KEY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n")])])]),s("h2",{attrs:{id:"immuadmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immuadmin"}},[a._v("#")]),a._v(" immuadmin")]),a._v(" "),s("p",[a._v("immuadmin can be used to install and manage the immudb service for Windows and Linux")]),a._v(" "),s("h3",{attrs:{id:"linux-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-2"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("linux "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" immuadmin-static\n")])])]),s("h3",{attrs:{id:"windows-by-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-by-component"}},[a._v("#")]),a._v(" Windows (by component)")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("amd64 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" immuadmin-static\n")])])]),s("h2",{attrs:{id:"immudb-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immudb-service"}},[a._v("#")]),a._v(" immudb service")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# install immudb service")]),a._v("\n./immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# check current immudb service status")]),a._v("\n./immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" status\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# stop immudb service")]),a._v("\n./immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" stop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# start immudb service")]),a._v("\n./immudb "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" start\n")])])]),s("p",[a._v("The linux service is using the following defaults:")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("File or configuration")]),a._v(" "),s("th",[a._v("location")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("all configuration files")]),a._v(" "),s("td",[a._v("/etc/immudb")])]),a._v(" "),s("tr",[s("td",[a._v("all data files")]),a._v(" "),s("td",[a._v("/var/lib/immudb")])]),a._v(" "),s("tr",[s("td",[a._v("pid file")]),a._v(" "),s("td",[a._v("/var/lib/immudb/immudb.pid")])]),a._v(" "),s("tr",[s("td",[a._v("log files")]),a._v(" "),s("td",[a._v("/var/log/immudb")])])])]),a._v(" "),s("h2",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[a._v("#")]),a._v(" Authentication")]),a._v(" "),s("p",[a._v("immudb supports multiple user accounts that can have admin, read-only or read-write permission.\nAll permissions are stored in a different database and each gRPC call has an associated minimum permissions.")]),a._v(" "),s("p",[a._v("To enable authentication you need to change the configuration file "),s("code",[a._v("/etc/immudb/immudb.toml")])]),a._v(" "),s("p",[a._v("Example:")]),a._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./data"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("network")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tcp"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("address")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.0.0.0"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3322")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("dbname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"immudb"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("pidfile")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("logfile")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("mtls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("detached")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("auth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("no-histograms")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("pkey")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./tools/mtls/3_application/private/localhost.key.pem"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("certificate")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./tools/mtls/3_application/certs/localhost.cert.pem"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("clientcas")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./tools/mtls/2_intermediate/certs/ca-chain.cert.pem"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("devmode")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("admin-password")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"immudb"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# this password is only used once to initialize immudb and can be ignored")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("maintenance")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[a._v("signingKey")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n")])])]),s("p",[a._v("The important lines to change are "),s("code",[a._v("auth = true")]),a._v(" and "),s("code",[a._v('address = "0.0.0.0"')]),a._v(" to enable authentication and listening on all interfaces.")]),a._v(" "),s("p",[a._v("Then restart/start immudb.")]),a._v(" "),s("h3",{attrs:{id:"get-the-admin-credentials"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-the-admin-credentials"}},[a._v("#")]),a._v(" Get the admin credentials")]),a._v(" "),s("p",[a._v("You need to run "),s("code",[a._v("immuadmin")]),a._v(" locally on the same system as immudb (for security reasons) and connect to immudb:")]),a._v(" "),s("p",[s("code",[a._v("immuadmin login immudb")])]),a._v(" "),s("p",[a._v("You^ll receive the following message:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Using config file: /etc/immudb/immudb.toml\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\nThis looks like the very first admin login attempt, hence the following credentials have been generated:\n---\nusername: immudb\npassword: immudb\n---\nIMPORTANT: This is the only "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" they are shown, so "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" sure you remember them.\nNOTE: You have not been automatically logged in. To login please run the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'immuadmin login immu'")]),a._v(" with the above-mentioned password. You can change your password at any "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" with one of your liking using the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'immuadmin user change-password immu'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n")])])]),s("p",[s("strong",[a._v("Please note that the password for the immudb user is the master password")])]),a._v(" "),s("h3",{attrs:{id:"user-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-management"}},[a._v("#")]),a._v(" User management")]),a._v(" "),s("p",[a._v("To manage user, run "),s("code",[a._v("immuadmin user")]),a._v(" after you logged in "),s("code",[a._v("immuadmin login immudb")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Please specify a user action.\nUsage: immuadmin user list"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("create"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("change-password"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("set-permission"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("deactivate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("read"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("readwrite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nHelp "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" immuadmin user -h\n")])])]),s("h4",{attrs:{id:"list-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-user"}},[a._v("#")]),a._v(" List user")]),a._v(" "),s("p",[a._v("To get a list of all existing user including their permissions, run "),s("code",[a._v("immuadmin user list")])]),a._v(" "),s("h4",{attrs:{id:"add-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-user"}},[a._v("#")]),a._v(" Add user")]),a._v(" "),s("p",[a._v("Let's create a read-only user, called ro "),s("code",[a._v("immuadmin user create <username> read")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("immuadmin user create ro "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v("\nNOTE: password must have between "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" and "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("32")]),a._v(" letters, digits and special characters of "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" at least "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" uppercase letter, "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" digit and "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" special character.\nChoose a password "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" ro:\nConfirm password:\nUser ro created\n")])])]),s("p",[a._v("and a read-write user, called rw "),s("code",[a._v("immuadmin user create rw readwrite")])]),a._v(" "),s("h4",{attrs:{id:"change-user-permission"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#change-user-permission"}},[a._v("#")]),a._v(" Change user permission")]),a._v(" "),s("p",[a._v("To change the ro user permission from read-only to read-write, run "),s("code",[a._v("immuadmin user set-permission ro readwrite")]),a._v("\nCheck the change, using "),s("code",[a._v("immuadmin user list")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("immuadmin user list\nUsing config file: /etc/immudb/immudb.toml\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(":\n-  --------  ----    -----------\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  Username  Role    Permissions")]),a._v("\n-  --------  ----    -----------\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  immu      admin   admin\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("  ro        client  readwrite\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("  rw        client  readwrite\n-  --------  ----    -----------\n")])])]),s("h4",{attrs:{id:"deactivate-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deactivate-user"}},[a._v("#")]),a._v(" Deactivate user")]),a._v(" "),s("p",[a._v("To deactivate an existing user, run "),s("code",[a._v("immuadmin user deactivate ro")])]),a._v(" "),s("h4",{attrs:{id:"reactivate-user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactivate-user"}},[a._v("#")]),a._v(" Reactivate user")]),a._v(" "),s("p",[a._v("To reactivate a deactivated user account, you can simply set user permission again. Run "),s("code",[a._v("immuadmin user set-permission ro readwrite")])]),a._v(" "),s("h2",{attrs:{id:"state-signature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state-signature"}},[a._v("#")]),a._v(" State signature")]),a._v(" "),s("p",[a._v("It's possible to sign each state with a private key.\nIn this way clients and auditor can verify the immudb server identity.\nTo launch immudb with signatures, either use "),s("code",[a._v("--signingKey")]),a._v(" flag or "),s("code",[a._v("IMMUDB_SIGNING_KEY")]),a._v(" environment variable.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./immudb --signingKey test/signer/ec1.key\n")])])]),s("p",[a._v("To generate an elliptic curve private key use:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("openssl ecparam -name prime256v1 -genkey -noout -out private.key\n")])])]),s("p",[a._v("To generate the public key from the previous one:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("openssl ec -in private.key -pubout -out public.key\n")])])]),s("h2",{attrs:{id:"backup-and-restore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backup-and-restore"}},[a._v("#")]),a._v(" Backup and Restore")]),a._v(" "),s("p",[a._v("The simplest way to backup immudb is to use your operating system tools like tar or zip.\nYou can stop immudb and backup the data directory (default: "),s("code",[a._v("/var/lib/immudb")]),a._v(") and start immudb again.")]),a._v(" "),s("p",[a._v("The other alternative is using the "),s("code",[a._v("immuadmin backup")]),a._v(" command. Please keep in mind, that "),s("code",[a._v("immuadmin backup")]),a._v(" is stopping immudb as well and a manual start is required.")]),a._v(" "),s("h2",{attrs:{id:"multi-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-database"}},[a._v("#")]),a._v(" Multi-Database")]),a._v(" "),s("p",[a._v("Starting immudb version 0.7.0 we introduced a multi-database support. By default the first database is either called defaultdb or based on the environment variable "),s("code",[a._v("IMMUDB_DBNAME")]),a._v(".")]),a._v(" "),s("h3",{attrs:{id:"database-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-management"}},[a._v("#")]),a._v(" Database management")]),a._v(" "),s("p",[a._v("We recommend using "),s("code",[a._v("immuadmin")]),a._v(" to create additional users and databases.")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("immuadmin login immudb  # Authentication is enabled by default, default user is immudb and password immudb;\n                        # first login asks for a password change and must contain upper and lower case letters, digits, punctuation mark or symbol\n\nimmuadmin database list          # show all existing databases\nimmuadmin database create testdb # database testdb created\n")])])]),s("p",[a._v("immuclient can be used to test the setup or in scripts. Of course the API supports multi-db handling as well.")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("immuclient login immudb   # login to immudb with user immudb\nimmuclient use testdb     # use testdb for all following commands\nimmuclient safeset k0 v0  # set a key value in testdb\n")])])]),s("h3",{attrs:{id:"database-user-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-user-management"}},[a._v("#")]),a._v(" Database user management")]),a._v(" "),s("p",[a._v("You can create additional user using the immuadmin and grant database permissions automatically.")]),a._v(" "),s("p",[s("code",[a._v("immuadmin user help")]),a._v(" shows you all information about the command usage.")]),a._v(" "),s("p",[a._v("Permissions are: "),s("em",[a._v("read")]),a._v(", "),s("em",[a._v("readwrite")]),a._v(" and "),s("em",[a._v("admin")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# create an user for the newly created database\nimmuadmin user create myuser readwrite testdb       # create user myuser (password will be requested) and grant readwrite permissions to testdb\n\nimmuadmin user permission grant myuser admin testdb # change permissions to admin for user myuser on testdb\nimmuadmin user permission grant myuser readwrite testdb # change permissions to readwrite for user myuser on testdb\nimmuadmin user permission revoke myuser readwrite testdb # revoke permissions for user myuser on testdb\n")])])]),s("p",[a._v("To check all database permissions use "),s("code",[a._v("immuadmin user list")])]),a._v(" "),s("h3",{attrs:{id:"api-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-examples"}},[a._v("#")]),a._v(" API examples")]),a._v(" "),s("p",[a._v("This section is not yet ready for immudb 0.9. We are working on it in order to improve it and we are close to deliver. Stay tuned!")]),a._v(" "),s("h2",{attrs:{id:"clients"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clients"}},[a._v("#")]),a._v(" Clients")]),a._v(" "),s("p",[a._v("Starting version 0.6.0 of immudb, you can use immugw (REST API), immuclient (interactive) or GoLang as immudb database clients.\nDepending on the user settings and permissions, you can have read-only and read-write clients.")]),a._v(" "),s("p",[s("RouterLink",{attrs:{to:"/0.9.2/apis-references.html"}},[a._v("APIs and interfaces")]),a._v(" - API reference and code examples")],1),a._v(" "),s("p",[a._v("More driver libraries are coming soon (Java, Node.js, Python, .net aso.)")]),a._v(" "),s("h2",{attrs:{id:"auditors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auditors"}},[a._v("#")]),a._v(" Auditors")]),a._v(" "),s("p",[a._v("Auditors make sure that the data consistency is guaranteed inside immudb. They do a random key value verification and an interval-based Merkle-tree consistency check (5 minutes default). The immugw and the immuclient provide auditor functionality that runs as a daemon process. It is recommended to run immugw and immuclient on different machines than immudb, so any tampering on the immudb server is automatically detected.")]),a._v(" "),s("p",[a._v("The results of the auditors are provided by a Prometheus end point.")]),a._v(" "),s("h3",{attrs:{id:"immugw-auditor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immugw-auditor"}},[a._v("#")]),a._v(" immugw auditor")]),a._v(" "),s("p",[a._v("You can find immugw in the following repository: "),s("a",{attrs:{href:"https://github.com/codenotary/immugw",target:"_blank",rel:"noopener noreferrer"}},[a._v("immugw"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("Start interactive:\n"),s("code",[a._v("immugw --audit")])]),a._v(" "),s("p",[a._v("Service configuration:\nTo enable auditor, you need to edit /etc/immudb/immugw.toml and add the following section:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("audit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# false is default")]),a._v("\naudit-interval "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5m"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# suffixes: "s", "m", "h", examples: 10s, 5m 1h')]),a._v("\naudit-username "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# when immudb authentication is enabled, use read-only user credentials here")]),a._v("\naudit-password "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# and the password")]),a._v("\n")])])]),s("p",[a._v("Restart the immugw service afterwards - "),s("code",[a._v("immuadmin service immugw restart")])]),a._v(" "),s("p",[s("strong",[a._v("immugw Port: 9476 - http://immugw-auditor:9476/metrics")])]),a._v(" "),s("p",[a._v("example output:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immugw_audit_curr_root_per_server Current root index used for the latest audit.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immugw_audit_curr_root_per_server gauge")]),a._v("\nimmugw_audit_curr_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immugw_audit_prev_root_per_server Previous root index used for the latest audit.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immugw_audit_prev_root_per_server gauge")]),a._v("\nimmugw_audit_prev_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immugw_audit_result_per_server Latest audit result (1 = ok, 0 = tampered).")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immugw_audit_result_per_server gauge")]),a._v("\nimmugw_audit_result_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immugw_audit_run_at_per_server Timestamp in unix seconds at which latest audit run.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immugw_audit_run_at_per_server gauge")]),a._v("\nimmugw_audit_run_at_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".590757033502689e+09\n")])])]),s("h3",{attrs:{id:"immuclient-auditor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immuclient-auditor"}},[a._v("#")]),a._v(" immuclient auditor")]),a._v(" "),s("p",[a._v("Start interactive:\n"),s("code",[a._v("immuclient audit-mode")])]),a._v(" "),s("p",[a._v("Install service:\n"),s("code",[a._v("immuclient audit-mode install")])]),a._v(" "),s("p",[a._v("**immuclient Port: 9477 - http://immuclient-auditor:9477/metrics **")]),a._v(" "),s("p",[a._v("example output:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immuclient_audit_curr_root_per_server Current root index used for the latest audit.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immuclient_audit_curr_root_per_server gauge")]),a._v("\nimmuclient_audit_curr_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immuclient_audit_prev_root_per_server Previous root index used for the latest audit.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immuclient_audit_prev_root_per_server gauge")]),a._v("\nimmuclient_audit_prev_root_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" -1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immuclient_audit_result_per_server Latest audit result (1 = ok, 0 = tampered).")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immuclient_audit_result_per_server gauge")]),a._v("\nimmuclient_audit_result_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" -1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HELP immuclient_audit_run_at_per_server Timestamp in unix seconds at which latest audit run.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TYPE immuclient_audit_run_at_per_server gauge")]),a._v("\nimmuclient_audit_run_at_per_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("server_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:3322"')]),a._v(",server_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"br8eugq036tfln0ct6o0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".5907565337454605e+09\n")])])]),s("p",[a._v("It's possible to provide the public key to verify the immudb server signature.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./immuclient audit-mode --audit-databases defaultdb --audit-password immudb --audit-username immudb  --server-signing-pub-key ./test/signer/ec1.pub\n")])])]),s("p",[a._v("If the server public signing key is being provided to the auditor, each unsigned state will trigger an error.")]),a._v(" "),s("p",[a._v("Check "),s("RouterLink",{attrs:{to:"/0.9.1/immudb/#state-signature"}},[a._v("state signature")]),a._v(" and "),s("RouterLink",{attrs:{to:"/0.9.1/sdks-api.html#verify-state-signature"}},[a._v("verify state signature")]),a._v(" paragraphs for additional details.")],1),a._v(" "),s("h2",{attrs:{id:"architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[a._v("#")]),a._v(" Architecture")]),a._v(" "),s("p",[a._v("This section is not yet ready for immudb 0.9. We are working on it in order to improve it and we are close to deliver. Stay tuned!")]),a._v(" "),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[a._v("#")]),a._v(" License")]),a._v(" "),s("p",[a._v("immudb is "),s("a",{attrs:{href:"https://github.com/codenotary/immudb/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[a._v("Apache v2.0 License"),s("OutboundLink")],1),a._v(".")])])}),[],!1,null,null,null);t.default=r.exports}}]);